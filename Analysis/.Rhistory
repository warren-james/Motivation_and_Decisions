value = "mu") %>%
ggplot(aes(mu, colour = group, fill = group)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.postion = "bottom") +
ggthemes::scale_colour_ptol() +
ggthemes::scale_fill_ptol()
plt_mu
plt_mu <- tibble(control = mu[,1],
motivated = mu[,2],
optimal = mu[,3]) %>%
gather(key = "group",
value = "mu") %>%
ggplot(aes(mu, colour = group, fill = group)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_colour_ptol() +
ggthemes::scale_fill_ptol()
plt_mu
plt_mu[["data"]]
plt_posterior[["data"]]
plt_posterior
plt_mu + geom_area(data = plt_posterior[["data"]])
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Predicted Mean Accuracy"
plt_posterior$labels$y <- "density"
plt_posterior
plt_mu + geom_area(data = plt_posterior[["data"]])
gridExtra::grid.arrange(plt_mu, plt_posterior, nrows = 2)
plt_posterior
plt_mu
gridExtra::grid.arrange(plt_mu, plt_posterior)
# means and posterior
plt_mu <- tibble(control = mu[,1],
motivated = mu[,2],
optimal = mu[,3]) %>%
gather(key = "group",
value = "mu") %>%
ggplot(aes(mu, colour = group, fill = group)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_x_continuous(limits = c(0.5,0.9)) +
ggthemes::scale_colour_ptol() +
ggthemes::scale_fill_ptol()
plt_mu
gridExtra::grid.arrange(plt_mu, plt_posterior)
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_discrete(breaks = seq(0,15,5)) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Predicted Mean Accuracy"
plt_posterior$labels$y <- "density"
plt_posterior
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_discrete(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Predicted Mean Accuracy"
plt_posterior$labels$y <- "density"
plt_posterior
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_continuous(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Predicted Mean Accuracy"
plt_posterior$labels$y <- "density"
plt_posterior
gridExtra::grid.arrange(plt_mu, plt_posterior)
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_continuous(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Posterior Distribution"
plt_posterior$labels$y <- "density"
plt_posterior
gridExtra::grid.arrange(plt_mu, plt_posterior)
post_mu <- function(m, x, m_matrix){
post <- rstan::extract(m)
beta <- colMeans(post$beta)
gamma <- colMeans(post$gamma)
mu  <- plogis(m_matrix %*% beta)
return(mu)
}
tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_mu(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, mu,
colour = group,
fill = group)) +
geom_area(position = "dodge",
alpha = 0.3)
post_mu(m_stan_group, x_vals, X)
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_continuous(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Posterior Distribution"
plt_posterior$labels$y <- "density"
plt_posterior
x_vals <- seq(0,1,0.001)
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_continuous(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Posterior Distribution"
plt_posterior$labels$y <- "density"
plt_posterior
x_vals <- seq(0,1-0.001,0.001)
plt_posterior <- tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X)) %>%
ggplot(aes(x, p, colour = group, fill = group)) +
#geom_line(aes(group = Group)) +
geom_area(position = "dodge", alpha = 0.3) +
theme_minimal() +
scale_x_continuous(limits = c(0.5, 0.9)) +
scale_y_continuous(breaks = c(seq(0,15,5))) +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() +
theme(legend.position = "bottom")
plt_posterior$labels$x <- "Posterior Distribution"
plt_posterior$labels$y <- "density"
plt_posterior
plt_mu <- tibble(control = mu[,1],
motivated = mu[,2],
optimal = mu[,3]) %>%
gather(key = "group",
value = "mu") %>%
ggplot(aes(mu, colour = group, fill = group)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_x_continuous(limits = c(0.5,0.9)) +
ggthemes::scale_colour_ptol() +
ggthemes::scale_fill_ptol()
plt_mu
plt_mu + geom_line(plt_posterior[["data"]], aes(p, colour = group))
plt_mu + geom_line(data = plt_posterior[["data"]], aes(p, colour = group))
plt_mu + geom_point(data = plt_posterior[["data"]], aes(p, colour = group))
plt_mu + geom_point(data = plt_posterior[["data"]], aes(x, p, colour = group))
plt_mu + geom_point(data = plt_posterior[["data"]], aes(x, p, colour = group), size = 0.1)
plt_mu + geom_line(data = plt_posterior[["data"]], aes(x, p, colour = group))
function (samples, prob = 0.89)
{
class.samples <- class(samples)[1]
coerce.list <- c("numeric", "matrix", "data.frame", "integer",
"array")
if (class.samples %in% coerce.list) {
samples <- coda::as.mcmc(samples)
}
x <- sapply(prob, function(p) coda::HPDinterval(samples,
prob = p))
n <- length(prob)
result <- rep(0, n * 2)
for (i in 1:n) {
low_idx <- n + 1 - i
up_idx <- n + i
result[low_idx] <- x[1, i]
result[up_idx] <- x[2, i]
names(result)[low_idx] <- concat("|", prob[i])
names(result)[up_idx] <- concat(prob[i], "|")
}
return(result)
}
hpdi <- function (samples, prob = 0.89)
{
class.samples <- class(samples)[1]
coerce.list <- c("numeric", "matrix", "data.frame", "integer",
"array")
if (class.samples %in% coerce.list) {
samples <- coda::as.mcmc(samples)
}
x <- sapply(prob, function(p) coda::HPDinterval(samples,
prob = p))
n <- length(prob)
result <- rep(0, n * 2)
for (i in 1:n) {
low_idx <- n + 1 - i
up_idx <- n + i
result[low_idx] <- x[1, i]
result[up_idx] <- x[2, i]
names(result)[low_idx] <- concat("|", prob[i])
names(result)[up_idx] <- concat(prob[i], "|")
}
return(result)
}
HPDI <- hpdi
hpdi <- as.tibble(t(purrr::map_df(as.tibble(mu), HPDI, prob = 0.95))) %>%
cbind(tibble(group = c("control", "motivated", "optimal"))) %>%
`colnames<-`(c("lower", "upper", "group")) %>%
select(group, lower, upper)
hpdi
rm(hpdi, HPDI)
hdi <- function(x, x.density, coverage){
best = 0
for (ai in 1 : (length(x) - 1)){
for (bi in (ai + 1) : length(x)){
mass = sum(diff(x[ai : bi]) * x.density[(ai + 1) : bi])
if (mass >= coverage && mass / (x[bi] - x[ai]) > best){
best = mass / (x[bi] - x[ai])
ai.best = ai
bi.best = bi
}
}
}
c(x[ai.best], x[bi.best])
}
hdi(x_vals, post_preds_beta(m_stan_group, x_vals, X), 0.95)
post_preds_beta(m_stan_group, x_vals, X)
tibble(
group = rep(unique(model_data_2$group), each = length(x_vals)),
x = rep(x_vals, 3),
p = post_preds_beta(m_stan_group, x_vals, X))
rm(hdi)
HDInterval::hdi(samples$mu[,1])
HDInterval::hdi(samples$mu[,2])
HDInterval::hdi(samples$mu[,3])
HDInterval::hdi(samples$mu[3,])
HDInterval::hdi(samples$mu[2,])
HDInterval::hdi(samples$mu[1,])
samples$mu[2]
samples$mu[2,]
samples$mu[,2]
head(mu)
HDInterval::hdi(mu[1,])
HDInterval::hdi(mu[,1])
HDInterval::hdi(mu[,2])
HDInterval::hdi(mu[,3])
as.tibble(upper = HDInterval::hdi(mu[,3])[1])
tibble(upper = HDInterval::hdi(mu[,3])[1])
tibble(upper = HDInterval::hdi(mu[,3])[1],)
tibble(upper = HDInterval::hdi(mu[,3])[1],lower = HDInterval::hdi(mu[,3])[2])
tibble(lower = HDInterval::hdi(mu[,3])[1], upper = HDInterval::hdi(mu[,3])[2])
hpdi_2 <- as.tibble(t(purr::map_df(as.tibble(mu), HDInterval::hid)))
hpdi_2 <- as.tibble(t(purrr::map_df(as.tibble(mu), HDInterval::hid)))
hpdi_2 <- as.tibble(t(purrr::map_df(as.tibble(mu), HDInterval::hdi)))
hpdi_2 <- as.tibble(t(purrr::map_df(as.tibble(mu), HDInterval::hdi))) %>%
cbind(tibble(group = c("control", "motivated", "optimal"))) %>%
`colnames<-`(c("lower", "upper", "group"))
View(hpdi_2)
head(hpdi_2)
hpdi_2 <- as.tibble(t(purrr::map_df(as.tibble(mu), HDInterval::hdi))) %>%
cbind(tibble(group = c("control", "motivated", "optimal"))) %>%
`colnames<-`(c("lower", "upper", "group"))
hpdi_2
hpdi_2 <- as.tibble(t(purrr::map_df(as.tibble(mu), HDInterval::hdi))) %>%
cbind(tibble(group = c("control", "motivated", "optimal"))) %>%
`colnames<-`(c("lower", "upper", "group")) %>%
select(group, lower, upper)
hpdi_2
head(plt_posterior{{"data"}})
head(plt_posterior[["data"]])
plt_again <- merge(plt_posterior[["data"]], hpdi_2)
head(plt_again)
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_area(position = "dodge",
alpha = 0.3,
aes(lower, upper))
plt_posterior[["data"]] %>%
ggplot(aes(x, p,
colour = group)) +
geom_line()
plt_posterior[["data"]] %>%
ggplot(aes(x, p,
colour = group)) +
geom_line() +
geom_area(data = hpdi_2)
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_area(position = "dodge",
alpha = 0.3,
aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_area(
alpha = 0.3,
aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(
alpha = 0.3,
aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line(
)
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0), fill = group))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0), fill = group, group = group))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(mapping = aes(x = ifelse(x > lower & x < upper, x, 0), fill = group, group = group))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(aes(group = group),
position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
aes(x = ifelse(x > lower & x < upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
aes(x = ifelse(x >= lower & x <= upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= lower & x <= upper, x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group,
group = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= unique(lower) & x <= unique(upper), x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= unique(lower) & x <= unique(upper), x, 0)))
merge(plt_posterior[["data"]], hpdi_2) %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
# geom_line() +
geom_area(position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= unique(lower) & x <= unique(upper), x, 0)))
plt_posterior[["data"]] %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(data = hdpi_2[hpdi_2$group == "control",],
#position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= lower & x <= upper, x, 0)))
hdpi_2[hpdi_2$group == "control",]
hpdi_2
plt_posterior[["data"]] %>%
filter(group == "control") %>%
ggplot(aes(x, p,
colour = group,
fill = group)) +
geom_line() +
geom_area(data = hpdi_2[hpdi_2$group == "control",],
#position = "dodge",
alpha = 0.3,
mapping = aes(x = ifelse(x >= lower & x <= upper, x, 0)))
