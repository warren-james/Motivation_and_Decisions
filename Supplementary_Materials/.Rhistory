group_by(participant, separation) %>%
summarise(mean_acc = mean(accuracy))
participant <- sample(unique(agDat$participant), 1)
head(agData)
head(agDat)
agDat[agDat$participant == participant] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
geom_point()
agDat[agDat$participant == participant,] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(extraDistr)
library(rstan)
library(psyphy)
agDat[agDat$participant == participant,] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
geom_point()
agDat <- df %>%
na.omit() %>%
group_by(participant, separation) %>%
summarise(Accuracy = mean(accuracy))
# pick example participant
participant <- sample(unique(agDat$participant), 1)
agDat[agDat$participant == participant,] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
geom_point()
agDat[agDat$participant == participant,] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point()
agDat[agDat$participant == participant,] %>%
ggplot(aes(separation, Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point() +
theme_bw()
get_VisDegs <- function(size,distance){
((2*atan2(size,(2*distance)))*180)/pi
}
# some constants
Screen_dist <- 60
x_res <- 1920
x_width <- 54
ppcm <- x_res/x_width
plt_curve <- agDat[agDat$participant == participant,] %>%
ggplot(aes(get_VisDegs(separation/ppcm, Screen_dist), Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point() +
theme_bw()
plt_curve$labels$y <- "Delta"
plt_curve
plt_curve <- agDat[agDat$participant == participant,] %>%
ggplot(aes(get_VisDegs(separation/ppcm, Screen_dist), Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point() +
theme_bw()
plt_curve$labels$y <- "Accuracy"
plt_curve$labels$x <- "Delta (Visual Degrees)"
plt_curve
load("Analysis/scratch/Part1_peng")
# get aggregated data
agDat <- df %>%
na.omit() %>%
group_by(participant, separation) %>%
summarise(Accuracy = mean(accuracy))
# pick example participant
participant <- sample(unique(agDat$participant), 1)
# plot data
plt_curve <- agDat[agDat$participant == participant,] %>%
ggplot(aes(get_VisDegs(separation/ppcm, Screen_dist), Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point() +
theme_bw()
plt_curve$labels$y <- "Accuracy"
plt_curve$labels$x <- "Delta (Visual Degrees)"
plt_curve
```{r Psychometric curves warning=FALSE}
load("Analysis/scratch/Part1_peng")
# get aggregated data
agDat <- df %>%
na.omit() %>%
group_by(participant, separation) %>%
summarise(Accuracy = mean(accuracy))
# pick example participant
participant <- sample(unique(agDat$participant), 1)
# plot data
plt_curve <- agDat[agDat$participant == participant,] %>%
ggplot(aes(get_VisDegs(separation/ppcm, Screen_dist), Accuracy)) +
geom_smooth(colour = "black", method = glm,
method.args = list(family = binomial(mafc.logit(2))),
se = F, fullrange = T) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_point() +
theme_bw()
plt_curve$labels$y <- "Accuracy"
plt_curve$labels$x <- "Delta (Visual Degrees)"
plt_curve
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(extraDistr)
library(rstan)
library(psyphy)
library(brms)
# function to get visual degrees
get_VisDegs <- function(size,distance){
((2*atan2(size,(2*distance)))*180)/pi
}
# some constants
Screen_dist <- 60
x_res <- 1920
x_width <- 54
ppcm <- x_res/x_width
load("Analysis/modelling/model_data/model_data_scaled")
head(model_data_scaled)
View(model_data_scaled)
range(model_data_scaled$act_acc)
range(model_data_scaled$exp_acc)
m1 <- brms(act_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
m1 <- brm(act_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
summary(m1)
plot(post(m1))
plot(extract_samples(m1))
plot(marginal_effects(m1))
m2 <- brm(exp_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
summary(m2)
plot(marginal_effects(m2))
model_data_scaled %>% filter(scaled_sep == 1) %>% ggplot(aes(exp_acc, colour = group)) + geom_density()
model_data_scaled %>% filter(scaled_sep == 1) #%>% ggplot(aes(exp_acc, colour = group)) + geom_density()
View(model_data_scaled)
unique(model_data_scaled$scaled_sep)
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram()
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram(binwidth = 1)
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram(binwidth = 0.4)
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram(binwidth = 10)
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram(binwidth = 130)
model_data_scaled %>% ggplot(aes(scaled_sep)) + geom_histogram(binwidth = 0.001)
load("Analysis/scratch/all_data")
head(df_all)
load("Analysis/scratch/model_data")
head(df)
rm(list = ls())
load("Analysis/scratch/model_data")
head(df_all)
model_data_scaled <- df_all %>%
group_by(participant, group, separation) %>%
summarise(act_acc = mean(correct),
exp_acc = mean(accuracy))
head(model_Data)
head(model_data_scaled)
model_data_scaled <- df_all %>%
group_by(participant, group, separation) %>%
summarise(act_acc = mean(correct),
exp_acc = mean(accuracy)) %>%
mutate(scaled_sep = separation/max(separation))
head(model_data_scaled)
model_data_scaled %>% filter(scaled_sep == 1) %>% ggplot(aes(act_acc)) + geom_density()
model_data_scaled %>% filter(scaled_sep == 1) %>% ggplot(aes(act_acc, colour = group)) + geom_density()
model_data_scaled %>% filter(scaled_sep == 1) %>% ggplot(aes(exp_acc, colour = group)) + geom_density()
model_data_scaled %>% filter(scaled_sep == 1) %>% ggplot(aes(act_acc, colour = group)) + geom_density()
m1 <- brm(act_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
range(model_data_scaled$act_acc)
range(model_data_scaled$exp_acc)
# replicating the BRMS version essentially
model_data <- df_all %>%
group_by(participant, group) %>%
summarise(accuracy = mean(correct)) %>%
ungroup()
range(model_data$accuracy)
model_data_scaled <- df_all %>%
group_by(participant, group, separation) %>%
summarise(act_acc = mean(correct),
exp_acc = mean(accuracy)) %>%
mutate(scaled_sep = separation/max(separation),
act_acc = act_acc*0.9999) %>%
ungroup()
range(model_data_scaled$act_acc)
m1 <- brm(act_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
m2 <- brm(exp_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
# markdown models
library(tidyverse)
library(brms)
# load data
load("Analysis/scratch/model_data")
# format data for model
model_data_scaled <- df_all %>%
group_by(participant, group, separation) %>%
summarise(act_acc = mean(correct),
exp_acc = mean(accuracy)) %>%
mutate(scaled_sep = separation/max(separation),
act_acc = act_acc*0.9999) %>%
ungroup()
# make first model on actual accuracy
m1 <- brm(act_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
save(m1, file = "Analysis/scratch/markdown_model_act")
m2 <- brm(exp_acc ~ (group + scaled_sep)^2,
data = model_data_scaled,
family = "beta",
chains = 1,
iter = 2000,
warmup = 1000)
save(m1, file = "scratch/markdown_model_act")
save(m1, file = "scratch/markdown_model_act")
setwd("E:/Github/Motivation_and_Decisions/Supplementary_Materials")
save(m1, file = "scratch/markdown_model_act")
# save
save(m2, file = "scratch/markdown_model_exp")
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(extraDistr)
library(rstan)
library(psyphy)
library(brms)
# function to get visual degrees
get_VisDegs <- function(size,distance){
((2*atan2(size,(2*distance)))*180)/pi
}
# some constants
Screen_dist <- 60
x_res <- 1920
x_width <- 54
ppcm <- x_res/x_width
load("scratch/markdown_model_act")
load("scratch/markdown_model_exp")
plot(marginal_effects(m1))
plt_m_act <- plot(marginal_effects(m1))[[3]]
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]]
plt_m_acc
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat()
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat()
plt_m_act
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Visual Degrees)"
plt_m_act
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Visual Degrees)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled Visual Degrees)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_act
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy")
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_act
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
plt_m_exp
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = c(1,1))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = c(.8,.8))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = c(.8,.9))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = c(.8,.85))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = c(.82,.82))
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy")
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy")
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy") +
theme(legend.position = c(.82,.82))
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
plt_m_act <- plot(marginal_effects(m1), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Actual Accuracy") +
theme(legend.position = "none")
plt_m_act$labels$y <- "Accuracy"
plt_m_act$labels$x <- "Delta (Scaled)"
plt_m_act$labels$colour <- "Group"
plt_m_act$labels$fill <- "Group"
plt_m_exp <- plot(marginal_effects(m2), plot = F)[[3]] +
see::scale_color_flat() +
see::scale_fill_flat() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_bw() +
ggtitle("Expected Accuracy") +
theme(legend.position = c(.82,.82))
plt_m_exp$labels$y <- "Accuracy"
plt_m_exp$labels$x <- "Delta (Scaled)"
plt_m_exp$labels$colour <- "Group"
plt_m_exp$labels$fill <- "Group"
gridExtra::grid.arrange(plt_m_act, plt_m_exp, ncol = 2)
summary(m1)
summary(m2)
